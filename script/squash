#!/bin/bash

# Usage: script/squash
# Squash all commits into a single commit.

# Exit on error
set -e

# Ensure the script is run from the root of a Git repository
if [ ! -d ".git" ]; then
  echo "Error: This is not a Git repository."
  exit 1
fi

# Get the current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Confirm before proceeding
read -p "This will squash all commits into one and rewrite history. Are you sure? (y/N) " confirm
if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
  echo "Aborted."
  exit 1
fi

# Create a backup branch before making changes
BACKUP_BRANCH="backup-before-squash"
git branch "$BACKUP_BRANCH"
echo "Backup branch '$BACKUP_BRANCH' created."

# Create a new orphan branch
git checkout --orphan temp-branch

# Stage all files
git add .

# Create a single commit
git commit -m "squash: Reset history to a single commit"

# Delete the old branch and rename the new one
git branch -D "$CURRENT_BRANCH"
git branch -m "$CURRENT_BRANCH"

# Force push to overwrite history
git push --force origin "$CURRENT_BRANCH"

# Clean up
git gc --aggressive --prune=all

echo "✔ Git history has been squashed into a single commit."
echo "✔ A backup branch '$BACKUP_BRANCH' has been created in case you need to restore."
